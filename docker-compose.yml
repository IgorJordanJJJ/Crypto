version: '3.8'

services:
  clickhouse:
    image: clickhouse/clickhouse-server:23.8
    container_name: crypto-clickhouse
    ports:
      - "8123:8123"  # HTTP interface
      - "9000:9000"  # Native interface
    environment:
      - CLICKHOUSE_DB=crypto_analytics
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD:-}
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - clickhouse_logs:/var/log/clickhouse-server
      - ./docker/clickhouse-config.xml:/etc/clickhouse-server/config.xml:ro
    networks:
      - crypto-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8123/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  crypto-app:
    build: .
    container_name: crypto-app
    ports:
      - "8000:8000"
    environment:
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD:-}
      - CLICKHOUSE_DATABASE=crypto_analytics
      - COINGECKO_API_KEY=${COINGECKO_API_KEY:-}
      - DEBUG=${DEBUG:-false}
    depends_on:
      clickhouse:
        condition: service_healthy
    networks:
      - crypto-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  data-scheduler:
    build: .
    container_name: crypto-data-scheduler
    environment:
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD:-}
      - CLICKHOUSE_DATABASE=crypto_analytics
      - COINGECKO_API_KEY=${COINGECKO_API_KEY:-}
    depends_on:
      clickhouse:
        condition: service_healthy
    networks:
      - crypto-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    command: ["python", "-m", "app.scheduler"]

  superset-redis:
    image: redis:7-alpine
    container_name: crypto-superset-redis
    networks:
      - crypto-network
    restart: unless-stopped
    volumes:
      - superset_redis_data:/data

  superset-postgres:
    image: postgres:15-alpine
    container_name: crypto-superset-postgres
    environment:
      - POSTGRES_DB=superset
      - POSTGRES_USER=superset
      - POSTGRES_PASSWORD=${SUPERSET_DB_PASSWORD:-supersetpassword}
    volumes:
      - superset_postgres_data:/var/lib/postgresql/data
    networks:
      - crypto-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U superset"]
      interval: 10s
      timeout: 5s
      retries: 5

  superset:
    image: apache/superset:latest
    container_name: crypto-superset
    ports:
      - "8088:8088"
    environment:
      - SUPERSET_SECRET_KEY=${SUPERSET_SECRET_KEY:-your_secret_key_here}
      - DATABASE_DB=superset
      - DATABASE_HOST=superset-postgres
      - DATABASE_PASSWORD=${SUPERSET_DB_PASSWORD:-supersetpassword}
      - DATABASE_USER=superset
      - DATABASE_PORT=5432
      - DATABASE_DIALECT=postgresql
      - REDIS_HOST=superset-redis
      - REDIS_PORT=6379
      - SUPERSET_WEBSERVER_PORT=8088
      - SUPERSET_CONFIG_PATH=/app/docker/superset_config.py
    depends_on:
      superset-postgres:
        condition: service_healthy
      superset-redis:
        condition: service_started
      clickhouse:
        condition: service_healthy
    networks:
      - crypto-network
    restart: unless-stopped
    volumes:
      - ./docker/superset:/app/docker
      - superset_home:/app/superset_home
    command: ["/app/docker/docker-init.sh"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  nginx:
    image: nginx:alpine
    container_name: crypto-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - crypto-app
      - superset
    networks:
      - crypto-network
    restart: unless-stopped

volumes:
  clickhouse_data:
    driver: local
  clickhouse_logs:
    driver: local
  superset_redis_data:
    driver: local
  superset_postgres_data:
    driver: local
  superset_home:
    driver: local

networks:
  crypto-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16